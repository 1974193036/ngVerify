{
  "name": "ngVerify",
  "tagline": "Angular Form Validation plugin. 高效的表单验证",
  "body": "# ngVerify v1.3.9\r\n\r\na easy Angular Form Validation plugin.\r\n简洁高效的__angular表单验证插件__  \r\n  \r\nSee how powerful it.\r\n看看它有多强大\r\n\r\n- 动态校验\r\n- 自动关联提交按钮\r\n- 多种 tip 校验消息提示\r\n- 不只校验 dom 元素值，还可以校验 ngModel 数据模型\r\n- 支持任意类型表单元素，甚至可以校验非表单元素\r\n- 提供 type 类型校验模板，你几乎不需要定校验规则\r\n- 提供自定义规则\r\n- 支持第三方组件校验\r\n\r\n\r\n<br>\r\n## Show\r\n[HOME - 首页](http://moerj.github.io/ngVerify/)  \r\n[DEMO - 示例](http://moerj.com/Github/ngVerify/)  \r\n  \r\n<br>\r\n## Getting Started\r\n在使用前，你需要引入angular\r\n\r\n```javascript\r\n\r\nrequire('angular');\r\n\r\nrequire('ngVerify');\r\n\r\nvar app = angular.module('APP',['ngVerify']);\r\n\r\n```\r\n  \r\n  \r\n<br>\r\n## How to use\r\n1. 标记一个表单范围 <a href=\"#step1\">verify-scope</a>\r\n2. 标记需要验证的元素 <a href=\"#step2\">ng-verify</a>\r\n3. 绑定提交按钮 <a href=\"#step3\">control</a>\r\n  \r\n\r\n<br>\r\n<h2 id=\"step1\">verify-scope</h2>\r\n入口指令，规定组件所控制的表单范围\r\n\r\n```html\r\n<form verify-scope>\r\n\t...\r\n</form>\r\n```\r\n\r\n### tipStyle (defualt: 1)\r\n设置整个表单的错误消息样式\r\n- 0 禁用tip提示\r\n- 1 气泡浮动提示，在元素右上角浮出\r\n- 2 气泡固定高度，紧接着元素另起一行\r\n\r\n```html\r\n<form verify-scope=\"tipStyle: 2\" >...</form>\r\n```\r\n\r\n  \r\n<br>\r\n<h2 id=\"step2\">ng-verify</h2>\r\n元素指令，定义验证规则\r\n\r\n### defualt\r\n只需要使用ng-verify，会根据type类型校验非空验证和类型的格式\r\n```html\r\n<!-- 校验非空验证和邮箱格式 -->\r\n<input type=\"email\" ng-verify >\r\n```\r\n\r\n### required (defualt: true)\r\nfalse允许空值通过校验\r\n```html\r\n<input type=\"number\" ng-verify=\"required: false\" >\r\n```\r\n\r\n### length (min,max)\r\n定制校验字符长度\r\n```html\r\n<input type=\"text\" ng-verify=\"{min:3,max:6}\" >\r\n```\r\n\r\n### pattern\r\n自定义正则，这样会优先以你的正则进行校验\r\n```html\r\n<input type=\"text\" ng-verify=\"pattern:/a-zA-Z/\" >\r\n```\r\n\r\n### errmsg\r\n自定义错误消息，会覆盖掉默认的提示。\r\n```html\r\n<input type=\"text\" ng-verify=\"{errmsg:'其实这里没有错，我是在逗你玩'}\" >\r\n```\r\n\r\n### option (defualt: 0)\r\nselect下拉菜单属性，指定的option表示选中会校验不通过\r\n```html\r\n<select ng-verify=\"option:0\" >\r\n\t<option>请选择</option>\r\n\t\t<option>1</option>\r\n\t\t<option>2</option>\r\n\t\t<option>3</option>\r\n</select>\r\n```\r\n\r\n### least (defualt: 1)\r\ncheckbox最少勾选数，指定至少勾选几项才会通过验证\r\n```html\r\n<div>\r\n\t<label >checkbox</label>\r\n\t<!-- checkbox多选，请确保所有checkbox被一个容器包起 -->\r\n\t<!-- 如果要用label修饰checkbox请统一所有都用 -->\r\n\t<!-- 确保每组checkbox的name属性相同，ng-verify指令只需要在任意一个checkbox上 -->\r\n\t<input type=\"checkbox\" name=\"checkbox\" > Captain America\r\n\t<input type=\"checkbox\" name=\"checkbox\" > Iron Man\r\n\t<input type=\"checkbox\" name=\"checkbox\"  ng-verify=\"least:2\"> Hulk\r\n</div>\r\n```\r\n\r\n### recheck\r\n指定一个元素进行2次校验，接收参数为 #id 或 name\r\n```html\r\n<input type=\"password\" name=\"password-1\" ng-verify>\r\n\r\n<!-- 检测第二次输入的密码是否一致 -->\r\n<input type=\"password\" ng-verify=\"{recheck:'password-1'}\">\r\n```\r\n\r\n<h3 id=\"step3\">control</h3>\r\n绑定一个表单提交按钮, control:'formName'\r\n```html\r\n<form name=\"myform\" verify>\r\n\t...\r\n\r\n\t<a ng-verify=\"{control:'myform'}\" ></a> <!-- 表单内的按钮 1 -->\r\n\r\n\t<input type=\"submit\" ng-verify /> <!-- 表单内的按钮 2 -->\r\n</form>\r\n\r\n<button ng-verify=\"{control:'myform'}\" >提交</button> <!--表单外的按钮-->\r\n```\r\n\r\n### disabled (defualt: true)\r\n设置 disabled:false 提交按钮在表单未校验通过时不会禁用，并且会自动绑定一个click事件，点击时标记所有错误表单。  \r\n注意：a 标签是没有 disabled 属性的，所以请使用 button 或者 input 来做按钮。\r\n```html\r\n\t<button ng-verify=\"disabled:false\" >按钮</button>\r\n```\r\n\r\n### tipStyle (defualt: form verify-scope)\r\n同上，设置单个元素提示样式\r\n  \r\n\r\n  \r\n<br>\r\n## API\r\n依赖注入\r\n```javascript\r\n//依赖注入ngVerify后，可以调用一些公共方法\r\napp.controller('yourCtrl',function(ngVerify){\r\n\t...\r\n})\r\n```\r\n\r\n### ngVerify.check('formName', call_back, draw)\r\n检测一个verify表单是否验证通过  \r\n```javascript\r\n'formName'             String      //指定检测form的name值 (必须)\r\ncall_back              Function    //检测完成后的回调 (可选)\r\ndraw (default:true)    Boolean     //是否标记出未验证通过的元素 (可选)\r\n```\r\n```javascript\r\n//返回所有未验证通过的表单元素，并标记\r\nngVerify.check('formName',function (errEls) {\r\n    console.log(errEls);\r\n});\r\n\r\n//标记出未验证通过元素\r\nngVerify.check('formName');\r\n\r\n//返回所有未验证通过的表单元素，不标记\r\nngVerify.check('formName',function (errEls) {\r\n    console.log(errEls);\r\n},false);\r\n```\r\n\r\n### ngVerify.setError(element, errmsg)\r\n将一个表单元素强制标记为未验证通过\r\n- element 需要标记的元素，可传入dom、id或者name,id需要带#\r\n- errmsg tip提示错误时显示的消息，其优先级高于其他错误消息\r\n\r\n```javascript\r\nngVerify.setError('#id','这里有错') //以id标记错误\r\nngVerify.setError('name') //以name取消标记错误\r\n```\r\n\r\n### ngVerify.scope()\r\n获取一个verify表单的$scope作用域\r\n```javascript\r\nngVerify.scope('formName')\r\n```\r\n  \r\n<br>\r\n## type\r\n设置表单元素type类型，目前支持的type类型：\r\n\r\n- email\r\n- number\r\n- phone\r\n- url\r\n- radio\r\n- checkbox\r\n- select\r\n- char (字母加下划线)\r\n- date/dates (yyyy-mm-dd || yyyy/mm/dd) (hh:mm || hh:mm:ss) 时间部分非必须\r\n- file\r\n   \r\n<br>\r\n## tips\r\n- 传入的参数字符串都必须是对象参数\"{key1: value1, key2: value2}\"，可以不写大括号 { }\r\n- checkbox、radio组绑定验证最好绑在最后一个\r\n- errmsg参数通常不需要你设置\r\n- 表单范围内的按钮，只要type=\"submit\"则不需要设置control参数\r\n- 带有 ngModel 的元素，其数据模型具有较高的校验优先级\r\n- 不支持form嵌套\r\n   \r\n<br>\r\n## Support\r\n- IE 9+\r\n- angular 1.x\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}