/**
 * ngVerify v0.1.1
 *
 * License: MIT
 * Designed and built by Moer
 * github   https://github.com/Moerj/ngVerify
 *
 */
!function(angular){function Init($scope,iElm,iAttrs){var OPTS=iAttrs.ngVerify;if(""==OPTS)OPTS={};else try{OPTS=eval("("+iAttrs.ngVerify+")")}catch(e){console.log("以下元素绑定的验证参数有语法错误："),console.error(iElm)}var DEFAULT={title:"此项为必填",value:iElm.val(),required:!0,option:0,min:iAttrs.minlength,max:iAttrs.maxlength,errorClass:"verifyError",disabled:!0};OPTS=angular.extend({},DEFAULT,OPTS),iElm.attr({required:OPTS.required,maxlength:OPTS.max,minlength:OPTS.min,"ng-pattern":OPTS.pattern}),iElm.OPTS=OPTS,iElm.iAttrs=iAttrs,OPTS.control?($scope.verify_subBtn.push(iElm),OPTS.disabled&&iElm.attr("disabled","disabled"),iElm.bind("click",function(){$scope.verify_submit()})):($scope.verify_elems.push(iElm),iElm.bind("blur",function(){ISVALID(iElm)||($(iElm).qtip({content:{text:OPTS.title},show:{ready:!0,event:!1},hide:{event:"keyup change"}}),iElm.addClass(OPTS.errorClass),DisableButtons($scope.verify_subBtn,!0))}).bind("change keyup",function(){if(ISVALID(iElm)){iElm.removeClass(OPTS.errorClass);var e=checkAll($scope.verify_elems);e.hasError||DisableButtons($scope.verify_subBtn,!1)}}))}function DisableButtons(e,r){for(var t=0;t<e.length;t++)e[t].OPTS.disabled&&e[t].attr("disabled",r)}function ISVALID(e){if("none"==e[0].style.display)return!0;var r,t=e.val(),i=e.OPTS,n=e.iAttrs;if(void 0==e[0].value&&(t=e.text()),i.required&&""==t)return i.title="不能为空",!1;if(!i.required&&""==t)return!0;if(t.length<i.min)return i.title="最少"+i.min+"个字符",!1;if("SELECT"==e[0].nodeName)return e[0].selectedIndex===i.option?(i.title="必须选择一项",!1):!0;if(i.pattern)r=i.pattern;else switch(n.type){case"number":r=/\d/;break;case"email":r=/^[\w-]+(\.[\w-]+)*@[\w-]+(\.[\w-]+)+$/;break;case"phone":r=/((\d{11})|^((\d{7,8})|(\d{4}|\d{3})-(\d{7,8})|(\d{4}|\d{3})-(\d{7,8})-(\d{4}|\d{3}|\d{2}|\d{1})|(\d{7,8})-(\d{4}|\d{3}|\d{2}|\d{1}))$)/;break;case"url":r=/(http|ftp|https):\/\/[\w\-_]+(\.[\w\-_]+)+([\w\-\.,@?^=%&amp;:\/~\+#]*[\w\-\@?^=%&amp;\/~\+#])?/;break;case"string":r=/a-zA-Z/}return r&&null==t.match(r)?(i.title=i.errmsg?i.errmsg:"输入类型错误",!1):!0}function checkAll(e){for(var r={hasError:!1,errEls:[]},t=0;t<e.length;t++)ISVALID(e[t])||r.errEls.push(e[t]);return r.hasError=!!r.errEls.length,r}var verifyModle=angular.module("ngVerify",[]);verifyModle.directive("verify",function(){return{scope:{},controller:function(e,r,t){this.getscope=function(){return e},e.verify_elems=[],e.verify_subBtn=[],e.verify_submit=function(){var r=e.verify_elems,t=checkAll(r);if(t.hasError)for(var i=0;i<t.errEls.length;i++)t.errEls[i].addClass(r[i].OPTS.errorClass)}},link:function(e,r){r.attr("novalidate","novalidate"),r[0]._verifyScope=e,r[0]._verifyCheck=checkAll(e.verify_elems)}}}),verifyModle.directive("ngVerify",function(){return{require:"?^verify",scope:!0,link:function(scope,iElm,iAttrs,pCtrl){if(void 0!=pCtrl){var $scope=pCtrl.getscope();Init($scope,iElm,iAttrs)}else{var obj=iAttrs.ngVerify;try{obj=eval("("+iAttrs.ngVerify+")")}catch(e){console.log("以下按钮需指向关联的form.name"),console.error(iElm)}var $scope=verify.scope(obj.control);if(void 0==$scope)return console.error("$scope获取失败"),void console.error(iElm);Init($scope,iElm,iAttrs)}}}}),window.verify={scope:function(e){for(var r,t=document.getElementsByName(e),i=0;i<t.length;i++)if(t[i]._verifyScope){r=t[i]._verifyScope;break}return r},check:function(e){for(var r,t=document.getElementsByName(e),i=0;i<t.length;i++)if(t[i]._verifyCheck){r=t[i]._verifyCheck;break}return r}}}(angular);
